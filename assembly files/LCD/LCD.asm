#ifndef lcd_asm
#define lcd_asm
#include "LCD\LCD_CONST.INC"
#include "MTOOL\MTOOL.INC"

#define LCD_DDR1 DDRA
#define LCD_DDR2 DDRB
#define LCD_PORT1 PORTA
#define LCD_PORT2 PORTB
#define LLINE1DDRAM 128
#define LLINE2DDRAM 192
#define LCS(X,Y) X==0?LLINE1DDRAM+Y:LLINE2DDRAM+Y

.MACRO MLCS
MOV ARG1,@0
MOV ARG2,@1
CALL MYLCS
.ENDMACRO

.macro MLCMD
LDI ARG1,@0
call LCD_CMD 
.ENDMACRO

.macro MLDATA
LDI ARG1,@0
call LCD_DATA
.ENDMACRO

.MACRO MLDATAREG
mov ARG1,@0
CALL LCD_DATA
.ENDMACRO

.MACRO MLBINARRY
mov ARG1,@0
CALL LBINARRY
.ENDMACRO
LCDINIT:
		LDI TMP,255
		OUT LCD_DDR1,R16
		LDI TMP,1<<DDRB0 | 1<<DDRB1 | 1<<DDRB2 | 1<<DDRB7
		OUT LCD_DDR2,R16
		MLCMD 0X3F
		MLCMD 0X0E
		MLCMD _LCLEAR
		RET
	LBINARRY:
		LDI TMP,8
		FOR(LSL0,TMP)
		LSL ARG1
		IFE(LSL0,BRCS)
		PUSH ARG1
		MLDATA '1'
		POP ARG1
		ELSE(LSL0)
		PUSH ARG1
		MLDATA '0'
		POP ARG1
		END(LSL0)
		ENDF(LSL0,TMP)
		RET


	LCD_CMD:
		OUT LCD_PORT1,ARG1
		CBI LCD_PORT2,0
		CBI LCD_PORT2,1
		SBI LCD_PORT2,2
		NOP
		NOP
		CBI LCD_PORT2,2
		CALL DELAY_2MS
		RET


LCD_DATA:
		OUT LCD_PORT1,ARG1
		SBI LCD_PORT2,0
		CBI LCD_PORT2,1
		SBI LCD_PORT2,2
		NOP
		NOP
		CBI LCD_PORT2,2
		CALL DELAY_100US
		RET

		DELAY_100US:
		PUSH TMP
		LDI TMP,10
	 L1:NOP
	 	NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		DEC R20
		BRNE L1
		POP TMP
		RET


DELAY_2MS:
		PUSH TMP
		LDI TMP,20
	 L2:CALL DELAY_100US
		DEC TMP
		BRNE L2
		POP TMP
		RET


DELAY_20MS:
		PUSH TMP
		LDI TMP,10
	 L3:CALL DELAY_2MS
		DEC TMP
		BRNE L3
		POP TMP
		RET



.MACRO MDISREG
MOV ARG1,@0
CALL DISREG
.ENDMACRO
DISREG:
	LDI ARG2,10
	CALL DIV
	MINT2CHAR R30
	;MPOP TMP
	MLDATAREG RES
	MINT2CHAR R31
	;MPOP TMP
	MLDATAREG RES
	RET



DIV:
		PUSH TMP
		PUSH I
		MOV TMP,ARG1
		LDI I,0
		MYDIV:
		CP TMP,ARG2
		BRMI DIVFINISH
		SUB TMP,ARG2
		INC I
		RJMP MYDIV
		DIVFINISH:
		MOV R31,TMP;MOD
		MOV R30,I
		POP I
		POP TMP
		RET

.MACRO MLSHIFTCR
LDI ARG1,@0
CALL LSHIFTCR
.ENDMACRO

LSHIFTCR:
	PUSH I
	MOV I,ARG1
	FOR(MYLSCR,I)
	MLCMD _LSHIFTCR
	ENDF(MYLSCR,I)
	POP I
	RET

	
.MACRO MLSHIFTCL
LDI ARG1,@0
CALL LSHIFTCL
.ENDMACRO

LSHIFTCL:
	PUSH I
	MOV I,ARG1
	FOR(MYLSCL,ARG1)
	MLCMD _LSHIFTCL
	ENDF(MYLSCL,ARG1)
	POP I
	RET

MYLCS:
PUSH TMP
CPI ARG1,0
IFE(MYLCSARG1,BREQ)
LDI TMP,128
ADD ARG2,TMP
MOV ARG1,ARG2
CALL LCD_CMD 
ELSE(MYLCSARG1)
LDI TMP,198
ADD ARG2,TMP
MOV ARG1,ARG2
CALL LCD_CMD 
END(MYLCSARG1)
POP TMP
RET
	;YY/MM/DD
	;HH:MM:SS
	;{1,4,7,17,20,23}

.MACRO MDISREGLOC
MLCS @1,@2
MDISREG @0
.ENDMACRO
#endif



