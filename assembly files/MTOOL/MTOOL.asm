#ifndef _MTOOL_ASM_
#define _MTOOL_ASM_
;.INCLUDE "RESOURCE\RESOURCE.INC"

.MACRO CBRS 
SEZ
SBRS @0,@1
CLZ
.ENDMACRO

;STACK = X
//-------------------------------------------STACK ERROR COMPATE LATER-----------------------
/*LDI R27,0
LDI R26,0

.MACRO MPUSH
MOV ARG1,@0
CALL MYPUSH
.ENDMACRO

.MACRO MPOP
MOV ARG1,@0
CALL MYPOP
.ENDMACRO
MYPOP:
CPI R26,0
IF(MYPOPIF,BRNE)
LD ARG1,-X
END(MYPOPIF)
RET 
MYPUSH:
CPI R26,0X0F
IF(MYPUSHIF,BRNE)
ST X+,ARG1
END(MYPUSHIF)
RET*/
//-------------------------------------------STACK ERROR COMPATE LATER-----------------------

/*LDI R28,low(GETARR(@1,@2))
LDI R29,high(GETARR(@1,@2))*/

.MACRO MLARR
;LDS RD,K
LDS @0,GETARR(@1,@2)
.ENDMACRO
.MACRO MSARR
;STS K,RD
STS GETARR(@1,@2),@0
.ENDMACRO


INT2CHAR:
PUSH TMP
LDI TMP,'0'
ADD ARG1,TMP
;MPUSH ARG1
MOV RES,ARG1
POP TMP
RET

.MACRO MINT2CHAR
MOV ARG1,@0
CALL INT2CHAR
.ENDMACRO


#endif	


;1<<BU|1<<BD
/*.MACRO	MITA1
	;INIT TMP ARG
		MOV TMPARG1,ARG1
.ENDMACRO

.MACRO	MIA1
		MOV ARG1,TMPARG1
.ENDMACRO
.MACRO	MITA2
	;INIT TMP ARG
		MOV TMPARG2,ARG2
.ENDMACRO
.MACRO	MIA2
		MOV ARG2,TMPARG2
.ENDMACRO

.MACRO	MITA
	;INIT TMP ARG
		MOV TMPARG1,ARG1
		MOV TMPARG2,ARG2
.ENDMACRO

.MACRO	MIA
		MOV ARG1,TMPARG1
		MOV ARG2,TMPARG2
.ENDMACRO*/

